package com.learningstorm.ml;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;

import backtype.storm.LocalDRPC;

/**
 * This class consumes messages from a file and predicts their category.
 */
public class PredictionConsumer {
	// drpc instance used for prediction
	private final LocalDRPC drpc;

	// input file, generated by kafka producer for prediction
	private final String input;

	// output file, where the predicted data will be stored
	private final String output;

	public PredictionConsumer(LocalDRPC drpc, String input, String output) {
		this.drpc = drpc;
		this.input = input;
		this.output = output;
	}

	/**
	 * This method predicts the categories for the records in the input file and writes them to the output file.
	 */
	public void predict() throws IOException{
		// Scanner on the input file
		Scanner scanner = new Scanner(new File(input));

		// Writer for the output
		BufferedWriter writer = new BufferedWriter(new FileWriter(new File(output)));

		while(scanner.hasNextLine()){
			String line = scanner .nextLine();
			if(line.trim().length()==1){
				// empty line, skip
				continue;
			}

			// predict the category for this line
			String prediction = drpc.execute("predict", line);

			// write the predicted category for this line
			writer.write(prediction+"\n");
		}

		// close the scanner and writer
		scanner.close();
		writer.close();
	}
}